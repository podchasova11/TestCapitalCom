name: Env. - Ubuntu/Chrome, Coder - Alex
on:
#  push:
  workflow_dispatch:
#   schedule:
#     - cron: '30 23 * * 4'

jobs:
  tests:
    name: I. Building environment and testing the capital.com website
#     runs-on: macos-latest
    runs-on: ubuntu-latest
    steps:
      - name: 1. Check out this repo
        uses: actions/checkout@v3
        continue-on-error: true

#      - name: Install Chrome
#        uses: browser-actions/setup-chrome@latest
#      - name: Install Firefox
#        uses: riccione/setup_firefox@v1
      - name: Check Chromium version
        run: chromium-browser --version

      - name: Check MS Edge version
        run: msedge --version
#  msedgedriver
#      - name: Check version installed browsers
#        run:
#          CHROMEWEBDRIVER --version
#          EDGEWEBDRIVER --version
#          GECKOWEBDRIVER --version

      - name: 2.1. Install Python
        if: always()
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

#      - name: 3.1. Set up Homebrew
#        id: set-up-homebrew
#        uses: Homebrew/actions/setup-homebrew@master
#
      - name: 3.1 Used preinstalled linuxbrew
        if: always()
#        run: $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
        run: /home/linuxbrew/.linuxbrew/bin/brew shellenv

      - name: 3.3. Install Neofetch
        if: always()
        run: /home/linuxbrew/.linuxbrew/bin/brew install neofetch

      - name: 4. install Poetry
        if: always()
        run: pip3 install poetry

      - name: 5. install dependencies
        if: always()
        run: poetry update

      - name: 6. Check code for errors by flake8 and format code with black
        uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: ""
          use-pylint: false
          use-pycodestyle: false
          use-flake8: true
          use-black: true
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: "--count --benchmark --ignore=E501,W191"
          extra-black-options: ". -S"
          extra-mypy-options: ""
          extra-isort-options: ""

      - name: 7. Run hwinfo.py
        run: poetry run python3 tests/hwinfo.py

#      - name: 8.0 Run tests for us_11-01-07_pre (Саша)
#        if: always()
#        run: poetry run pytest -v tests/US_11_Education/us_11-01-07_glossary/us_11-01-07_glossary_of_trading_pre_test.py
#        continue-on-error: true
#
#      - name: 8.1 Run tests for us_11-01-07 (Саша)
#        if: always()
#        run: poetry run pytest -v tests/US_11_Education/us_11-01-07_glossary/us_11-01-07_glossary_of_trading_terms_test.py
#        continue-on-error: true
#
#      - name: 8.2 Run tests for us_11-01-07-01 (Саша)
#        if: always()
#        run: poetry run pytest -v tests/US_11_Education/us_11-01-07_glossary/us_11-01-07-01_term/us_11-01-07-01_glossary_term_test.py
#        continue-on-error: true
#
      - name: 8.3 Run us_11-02-04_pre (Саша)
        if: always()
        run: poetry run pytest tests/US_11_Education/us_11-02-04_forex_trading/us_11-02-04_forex_trading_pre_test.py
        continue-on-error: true

      - name: 8.3 Run us_11-02-04 (Саша)
        if: always()
        run: poetry run pytest -v tests/US_11_Education/us_11-02-04_forex_trading/us_11-02-04_forex_trading_test.py
        continue-on-error: true

#       - name: 8. Upload artifact "allure-results"
#         if: always()
#         uses: actions/upload-artifact@v3
#         with:
#           name: allure-results
#           path: allure-results/
#           retention-days: 7

#   generate_report:
#     name: II. Generate & Deploy Allure report and Send telegram message
#     runs-on: ubuntu-latest
#     if: always()
#     needs: [ tests ]
#     steps:

      - name: 9. Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

#       - name: 2. Download Artifacts
#         uses: actions/download-artifact@v3
#         id: download
#         with:
#           name: allure-results
#           path: allure-results
#
      - name: 10. Generate allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history
          ref: gh-pages
          path: gh-pages
          keep_reports: 30

      - name: 11. Deploy allure_report to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          publish_dir: ./allure-history

#       - name: 5. Get access to github repository
#         uses: actions/checkout@v3
#         if: always()
#         continue-on-error: true
#         with:
#           ref: gh-pages
#           path: gh-pages
#
      - name: 12. Send telegram message on push
        uses: appleboy/telegram-action@master
        if: always()
        with:
          to: ${{ secrets.TELEGRAM_TO_ALEXTOM22 }}
#           to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
#           disable_web_page_preview: true
          message: |
            Message from Github CI Actions

            Testing of the "Capital.com" web application in the "MacOS/Chrome" environment is completed!

            See allure-result testing: https://${{ github.actor }}.github.io/TestCapitalCom/
#             Tests Repository: https://github.com/${{ github.repository }}
